{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3cc8365805d501cccd9f.hot-update.js","sources":["webpack:///./components/CountrySelector.js"],"sourcesContent":["import { useState } from 'react';\r\nimport useStats from '../utils/useStats';\r\nimport Stats from './Stats';\r\n\r\n\r\n\r\nexport default function CountrySelector() {\r\n  const { stats: countries, loading, error } = useStats(\r\n    'https://covid19.mathdro.id/api/countries'\r\n  );\r\n  const [selectedCountry, setSelectedCountry] = useState('LKA');\r\n  if (loading) return <p>Loading...</p>;\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error...</p>;\r\n\r\n  let oldStructure = {\r\n    countries: {},\r\n    iso3: {}\r\n    };\r\n\r\n  for (let country of countries.countries) {\r\n    oldStructure.countries[country.name] = country.iso2;\r\n    oldStructure.iso3[country.iso2] = country.iso3;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Currently Showing {selectedCountry} Stats</h2>\r\n      <select\r\n        onChange={e => {\r\n          setSelectedCountry(e.target.value);\r\n        }}\r\n      >\r\n        {Object.entries(oldStructure.countries).map(([country, code]) => (\r\n          <option\r\n            selected={selectedCountry === oldStructure.iso3[code]}\r\n            key={code}\r\n            value={oldStructure.iso3[code]}\r\n          >\r\n            {country}\r\n            <br></br>\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <Stats\r\n        url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}\r\n      ></Stats>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AACA;AADA;AAcA;AAAA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}