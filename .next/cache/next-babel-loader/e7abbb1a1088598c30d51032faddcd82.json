{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nfunction useStats() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      stats = _useState2[0],\n      setStats = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Fetching Data');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://covid19.mathdro.id/api').then(function (res) {\n                return res.json();\n              }));\n\n            case 3:\n              data = _context.sent;\n              setStats(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n}","map":{"version":3,"sources":["G:/React Project/React Corona Dash Board/utils/useStats.js"],"names":["useStats","useState","stats","setStats","useEffect","fetchData","console","log","fetch","then","res","json","data"],"mappings":";;;;AAAA,SAASA,QAAT,GAAmB;AAAA,kBACWC,QAAQ,EADnB;AAAA;AAAA,MACRC,KADQ;AAAA,MACDC,QADC;;AAEfC,EAAAA,SAAS,CAAC,YAAI;AAClB,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADJ;AAAA,+CAEuBC,KAAK,CAAC,gCAAD,CAAL,CAAwCC,IAAxC,CAClB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADe,CAFvB;;AAAA;AAEUC,cAAAA,IAFV;AAKIT,cAAAA,QAAQ,CAACS,IAAD,CAAR;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAP,IAAAA,SAAS;AACJ,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOH,KAAP;AACH","sourcesContent":["function useStats(){\r\n    const [stats, setStats] = useState();\r\n    useEffect(()=>{\r\nasync function fetchData(){\r\n    console.log('Fetching Data');\r\n    const data = await fetch('https://covid19.mathdro.id/api').then\r\n    (res => res.json()\r\n    );\r\n    setStats(data);\r\n}\r\n\r\nfetchData();\r\n    }, []);      \r\n    return stats;                     \r\n}\r\n"]},"metadata":{},"sourceType":"script"}