{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useStats() {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    async function fetchData(url) {\n      setLoading(true);\n      setError();\n      console.log('Fetching Data');\n      const data = await fetch('url').then(res => res.json().catch(err => {\n        setError(err);\n      }));\n      setStats(data);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["G:/React Project/React Corona Dash Board/utils/useStats.js"],"names":["useState","useEffect","useStats","stats","setStats","loading","setLoading","error","setError","fetchData","url","console","log","data","fetch","then","res","json","catch","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AAEA,eAAe,SAASC,QAAT,GAAmB;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAI;AAClB,mBAAeQ,SAAf,CAAyBC,GAAzB,EAA6B;AACzBJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ;AACRG,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,KAAD,CAAL,CAAaC,IAAb,CAAkBC,GAAG,IAAIA,GAAG,CAC3CC,IADwC,GACjCC,KADiC,CAC3BC,GAAG,IAAI;AAChBX,QAAAA,QAAQ,CAACW,GAAD,CAAR;AACH,OAHuC,CAAzB,CAAnB;AAIAf,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;;AACDG,IAAAA,SAAS;AACX,GAbY,EAaV,CAACC,GAAD,CAbU,CAAT;AAcA,SAAO;AACHP,IAAAA,KADG;AAEHE,IAAAA,OAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH","sourcesContent":["import { useState, useEffect} from 'react';\r\n\r\nexport default function useStats(){\r\n    const [stats, setStats] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    useEffect(()=>{\r\nasync function fetchData(url){\r\n    setLoading(true);\r\n    setError();\r\n    console.log('Fetching Data');\r\n    const data = await fetch('url').then(res => res.\r\n        json().catch(err => {\r\n            setError(err);\r\n        }));\r\n    setStats(data);\r\n    setLoading(false);\r\n   }\r\n   fetchData();\r\n}, [url]);      \r\n    return {\r\n        stats,\r\n        loading, \r\n        error\r\n    };                     \r\n}\r\n"]},"metadata":{},"sourceType":"module"}