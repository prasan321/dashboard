{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats() {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData(url) {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              console.log('Fetching Data');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch('url').then(function (res) {\n                return res.json();\n              }));\n\n            case 4:\n              data = _context.sent;\n              setLoading(false);\n              setStats(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["G:/React Project/React Corona Dash Board/utils/useStats.js"],"names":["useState","useEffect","useStats","stats","setStats","loading","setLoading","error","setError","fetchData","url","console","log","fetch","then","res","json","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA,kBACJF,QAAQ,EADJ;AAAA,MACvBG,KADuB;AAAA,MAChBC,QADgB;;AAAA,mBAEAJ,QAAQ,CAAC,KAAD,CAFR;AAAA,MAEvBK,OAFuB;AAAA,MAEdC,UAFc;;AAAA,mBAGJN,QAAQ,EAHJ;AAAA,MAGvBO,KAHuB;AAAA,MAGhBC,QAHgB;;AAI9BP,EAAAA,SAAS,CAAC,YAAI;AAClB,aAAeQ,SAAf,CAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIJ,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAFJ;AAAA,+CAGuBC,KAAK,CAAC,KAAD,CAAL,CAAaC,IAAb,CAAkB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAC3CC,IADwC,EAAJ;AAAA,eAArB,CAHvB;;AAAA;AAGUC,cAAAA,IAHV;AAKQX,cAAAA,UAAU,CAAC,KAAD,CAAV;AACJF,cAAAA,QAAQ,CAACa,IAAD,CAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQGR,IAAAA,SAAS;AACX,GAVY,EAUV,CAACC,GAAD,CAVU,CAAT;AAWA,SAAO;AACHP,IAAAA,KAAK,EAALA,KADG;AAEHE,IAAAA,OAAO,EAAPA,OAFG;AAGHE,IAAAA,KAAK,EAALA;AAHG,GAAP;AAKH","sourcesContent":["import { useState, useEffect} from 'react';\r\n\r\nexport default function useStats(){\r\n    const [stats, setStats] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    useEffect(()=>{\r\nasync function fetchData(url){\r\n    setLoading(true);\r\n    console.log('Fetching Data');\r\n    const data = await fetch('url').then(res => res.\r\n        json());\r\n        setLoading(false);\r\n    setStats(data);\r\n   }\r\n   fetchData();\r\n}, [url]);      \r\n    return {\r\n        stats,\r\n        loading, \r\n        error\r\n    };                     \r\n}\r\n"]},"metadata":{},"sourceType":"module"}