{"ast":null,"code":"var _jsxFileName = \"G:\\\\React Project\\\\React Corona Dash Board\\\\components\\\\CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\nlet oldStructure = {\n  countries: {},\n  iso3: {}\n};\n\nfor (let country of countries.countries) {\n  oldStructure.countries[country.name] = country.iso2;\n  oldStructure.iso3[country.iso2] = country.iso3;\n}\n\nexport default function CountrySelector() {\n  const {\n    stats: countries,\n    loading,\n    error\n  } = useStats('https://covid19.mathdro.id/api/countries');\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState('USA');\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Error...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Currently Showing \", selectedCountry), __jsx(\"select\", {\n    onChange: e => {\n      setSelectedCountry(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, Object.entries(countries.countries).map(([country, code]) => __jsx(\"option\", {\n    selected: selectedCountry === countries.iso3[code],\n    key: code,\n    value: countries.iso3[code],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, country))), __jsx(Stats, {\n    url: `https://covid19.mathdro.id/api/countries/${selectedCountry}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["G:/React Project/React Corona Dash Board/components/CountrySelector.js"],"names":["useState","useStats","Stats","oldStructure","countries","iso3","country","name","iso2","CountrySelector","stats","loading","error","selectedCountry","setSelectedCountry","e","target","value","Object","entries","map","code"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAAnB;;AAKE,KAAK,IAAIC,OAAT,IAAoBF,SAAS,CAACA,SAA9B,EAAyC;AACzCD,EAAAA,YAAY,CAACC,SAAb,CAAuBE,OAAO,CAACC,IAA/B,IAAuCD,OAAO,CAACE,IAA/C;AACAL,EAAAA,YAAY,CAACE,IAAb,CAAkBC,OAAO,CAACE,IAA1B,IAAkCF,OAAO,CAACD,IAA1C;AACC;;AAEH,eAAe,SAASI,eAAT,GAA2B;AACxC,QAAM;AAAEC,IAAAA,KAAK,EAAEN,SAAT;AAAoBO,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAuCX,QAAQ,CACnD,0CADmD,CAArD;AAGA,QAAM;AAAA,OAACY,eAAD;AAAA,OAAkBC;AAAlB,MAAwCd,QAAQ,CAAC,KAAD,CAAtD;AACA,MAAIW,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBC,eAAvB,CADF,EAEE;AACE,IAAA,QAAQ,EAAEE,CAAC,IAAI;AACbD,MAAAA,kBAAkB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,MAAM,CAACC,OAAP,CAAef,SAAS,CAACA,SAAzB,EAAoCgB,GAApC,CAAwC,CAAC,CAACd,OAAD,EAAUe,IAAV,CAAD,KACvC;AACE,IAAA,QAAQ,EAAER,eAAe,KAAKT,SAAS,CAACC,IAAV,CAAegB,IAAf,CADhC;AAEE,IAAA,GAAG,EAAEA,IAFP;AAGE,IAAA,KAAK,EAAEjB,SAAS,CAACC,IAAV,CAAegB,IAAf,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGf,OALH,CADD,CALH,CAFF,EAiBE,MAAC,KAAD;AACE,IAAA,GAAG,EAAG,4CAA2CO,eAAgB,EADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAuBD","sourcesContent":["import { useState } from 'react';\r\nimport useStats from '../utils/useStats';\r\nimport Stats from './Stats';\r\n\r\nlet oldStructure = {\r\n  countries: {},\r\n  iso3: {}\r\n  };\r\n  \r\n  for (let country of countries.countries) {\r\n  oldStructure.countries[country.name] = country.iso2;\r\n  oldStructure.iso3[country.iso2] = country.iso3;\r\n  }\r\n\r\nexport default function CountrySelector() {\r\n  const { stats: countries, loading, error } = useStats(\r\n    'https://covid19.mathdro.id/api/countries'\r\n  );\r\n  const [selectedCountry, setSelectedCountry] = useState('USA');\r\n  if (loading) return <p>Loading...</p>;\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Currently Showing {selectedCountry}</h2>\r\n      <select\r\n        onChange={e => {\r\n          setSelectedCountry(e.target.value);\r\n        }}\r\n      >\r\n        {Object.entries(countries.countries).map(([country, code]) => (\r\n          <option\r\n            selected={selectedCountry === countries.iso3[code]}\r\n            key={code}\r\n            value={countries.iso3[code]}\r\n          >\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <Stats\r\n        url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}\r\n      ></Stats>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}